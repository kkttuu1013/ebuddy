[{"C:\\Users\\81909\\Documents\\ebudy-1\\src\\Ebudy.jsx":"1","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\Header.js":"2","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\Ebutton.js":"3","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\Main.js":"4","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\LoginButton.js":"5","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\FormFormat.js":"6","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\TextInput.js":"7","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\SignUpButton.js":"8","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\Contents.jsx":"9"},{"size":275,"mtime":1607370727873,"results":"10","hashOfConfig":"11"},{"size":2261,"mtime":1607020283619,"results":"12","hashOfConfig":"11"},{"size":0,"mtime":1607015880113,"results":"13","hashOfConfig":"11"},{"size":824,"mtime":1607370706213,"results":"14","hashOfConfig":"11"},{"size":3174,"mtime":1607022240379,"results":"15","hashOfConfig":"11"},{"size":3421,"mtime":1607016319644,"results":"16","hashOfConfig":"11"},{"size":746,"mtime":1607012723743,"results":"17","hashOfConfig":"11"},{"size":2901,"mtime":1607020247332,"results":"18","hashOfConfig":"11"},{"size":29,"mtime":1607370715905,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xx8378",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\81909\\Documents\\ebudy-1\\src\\Ebudy.jsx",[],"C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\Header.js",["42","43"],"C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\Ebutton.js",[],["44","45"],"C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\Main.js",["46","47"],"C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\LoginButton.js",["48","49","50","51"],"import React,{useState,useCallback,useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextInput from './TextInput';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"doen\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide(props) {\r\n\r\n   \r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\")\r\n\r\n  const inputPassWord = useCallback((event) => {\r\n    setPassword(event.target.value)\r\n  },[setPassword]);\r\n\r\n  const inputEmail = useCallback((event) => {\r\n    setEmail(event.target.value)\r\n  },[setEmail]);\r\n\r\n  const inputDescription = useCallback((event) => {\r\n    setDescription(event.target.value)\r\n  },[setDescription]);\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n \r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  const useStyles = makeStyles({\r\n    Button:{\r\n    display:'inline-block',\r\n    padding: '0.6em 2em',\r\n    color: '#FFF',\r\n    border: 'solid 2px #FFF',\r\n    borderRadius: '10px',\r\n    transition: '.2s',\r\n    textAlign:'right',\r\n    \"&:hover\":{\r\n      background: '#BA55D3',\r\n      color: 'white',\r\n      borderColor:'#BA55D3'\r\n\r\n    },\r\n      \r\n    }\r\n  });\r\n\r\n const classes = useStyles();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button \r\n      className={classes.Button}\r\n      onClick={handleClickOpen}>\r\n        ログイン\r\n      </Button>\r\n    \r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          ログインしてください\r\n        </DialogTitle>\r\n        <DialogContent>\r\n        <TextInput\r\n              label={\"E-mail(必須)\"} multiline={false} rows={1}\r\n              value={email} type={\"text\"} onChange={inputEmail}\r\n              placeholder={\"E-mailを入力してください\"}\r\n              />\r\n\r\n            <TextInput\r\n              label={\"Password\"} multiline={false} rows={1}\r\n              value={password} type={\"text\"} onChange={inputPassWord}\r\n              placeholder={\"passwordを入力してください\"}\r\n              />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n          onClick={handleClose} \r\n          color=\"primary\"\r\n          variant=\"contained\" >\r\n            ログイン\r\n          </Button>\r\n\r\n          <Button \r\n          onClick={handleClose} \r\n          color=\"primary\"\r\n          variant=\"contained\" \r\n          >\r\n            キャンセル\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\FormFormat.js",["52","53","54","55","56"],"import React,{useState,useCallback,useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextInput from './TextInput';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide(props) {\r\n\r\n   \r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\")\r\n\r\n  const inputPassWord = useCallback((event) => {\r\n    setPassword(event.target.value)\r\n  },[setPassword]);\r\n\r\n  const inputEmail = useCallback((event) => {\r\n    setEmail(event.target.value)\r\n  },[setEmail]);\r\n\r\n  const inputDescription = useCallback((event) => {\r\n    setDescription(event.target.value)\r\n  },[setDescription]);\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n \r\n\r\n\r\n\r\n  const style = {\r\n    background: 'linear-gradient(45deg, #9999FF 30%, #bf4fce 90%)',\r\n    borderRadius: 20,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    width: 235,\r\n    padding: '0 30px',\r\n    boxShadow: '0 1px 3px 1px rgba(255, 105, 135, .3)',\r\n    fontSize:'20px',\r\n    textAlign:'center'\r\n  };\r\n\r\n\r\n\r\n  const useStyles = makeStyles({\r\n    Button:{\r\n      display:'inline-block',\r\n    padding: '0.3em 1em',\r\n    color: '#67c5ff',\r\n    border: 'solid 2px #67c5ff',\r\n    borderRadius: '3px',\r\n    transition: '.4s',\r\n    \"&:hover\":{\r\n      background: '#67c5ff',\r\n      color: 'white'\r\n    },\r\n      \r\n    }\r\n  });\r\n\r\n const classes = useStyles();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button \r\n      style={style}\r\n      onClick={handleClickOpen}>\r\n        {props.name}\r\n      </Button>\r\n    \r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          ログインしてください\r\n        </DialogTitle>\r\n        <DialogContent>\r\n        <TextInput\r\n              label={\"E-mail(必須)\"} multiline={false} rows={1}\r\n              value={email} type={\"text\"} onChange={inputEmail}\r\n              placeholder={\"E-mailを入力してください\"}\r\n              />\r\n\r\n            <TextInput\r\n              label={\"Password\"} multiline={false} rows={1}\r\n              value={password} type={\"text\"} onChange={inputPassWord}\r\n              placeholder={\"passwordを入力してください\"}\r\n              />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n          onClick={handleClose} \r\n          color=\"primary\"\r\n          variant=\"contained\" >\r\n            ログイン\r\n          </Button>\r\n\r\n          <Button \r\n          onClick={handleClose} \r\n          color=\"primary\"\r\n          variant=\"contained\" \r\n          >\r\n            キャンセル\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\TextInput.js",["57"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst TextInput = (props) => {\r\n\r\n  const useStyles = makeStyles({\r\n    text:{\r\n      paddingBottom:'35px',\r\n      backgroundColor:'#FFF',\r\n      flex: 1,\r\n      margin:'auto'\r\n    }\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <TextField\r\n     fullWidth={true}\r\n     label={props.label}\r\n     multiline={props.multiline}\r\n     rows={props.rows}\r\n     value={props.value}\r\n     type={props.type}\r\n     onChange={props.onChange}\r\n     placeholder={props.placeholder}\r\n     className={classes.text}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextInput;","C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\SignUpButton.js",["58","59","60","61","62","63"],"C:\\Users\\81909\\Documents\\ebudy-1\\src\\components\\Contents.jsx",["64"],{"ruleId":"65","severity":1,"message":"66","line":2,"column":33,"nodeType":"67","messageId":"68","endLine":2,"endColumn":45},{"ruleId":"65","severity":1,"message":"69","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":18},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"65","severity":1,"message":"74","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":15},{"ruleId":"65","severity":1,"message":"75","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":15},{"ruleId":"65","severity":1,"message":"76","line":1,"column":36,"nodeType":"67","messageId":"68","endLine":1,"endColumn":45},{"ruleId":"65","severity":1,"message":"77","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":25},{"ruleId":"65","severity":1,"message":"78","line":27,"column":10,"nodeType":"67","messageId":"68","endLine":27,"endColumn":21},{"ruleId":"65","severity":1,"message":"79","line":37,"column":9,"nodeType":"67","messageId":"68","endLine":37,"endColumn":25},{"ruleId":"65","severity":1,"message":"76","line":1,"column":36,"nodeType":"67","messageId":"68","endLine":1,"endColumn":45},{"ruleId":"65","severity":1,"message":"77","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":25},{"ruleId":"65","severity":1,"message":"78","line":27,"column":10,"nodeType":"67","messageId":"68","endLine":27,"endColumn":21},{"ruleId":"65","severity":1,"message":"79","line":37,"column":9,"nodeType":"67","messageId":"68","endLine":37,"endColumn":25},{"ruleId":"65","severity":1,"message":"80","line":86,"column":8,"nodeType":"67","messageId":"68","endLine":86,"endColumn":15},{"ruleId":"65","severity":1,"message":"81","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":15},{"ruleId":"65","severity":1,"message":"76","line":1,"column":36,"nodeType":"67","messageId":"68","endLine":1,"endColumn":45},{"ruleId":"65","severity":1,"message":"77","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":25},{"ruleId":"65","severity":1,"message":"82","line":26,"column":10,"nodeType":"67","messageId":"68","endLine":26,"endColumn":18},{"ruleId":"65","severity":1,"message":"78","line":27,"column":10,"nodeType":"67","messageId":"68","endLine":27,"endColumn":21},{"ruleId":"65","severity":1,"message":"83","line":29,"column":9,"nodeType":"67","messageId":"68","endLine":29,"endColumn":22},{"ruleId":"65","severity":1,"message":"79","line":37,"column":9,"nodeType":"67","messageId":"68","endLine":37,"endColumn":25},{"ruleId":"65","severity":1,"message":"84","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},"no-unused-vars","'createStyles' is defined but never used.","Identifier","unusedVar","'FormFormat' is defined but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'Build' is defined but never used.","'Ebutton' is defined but never used.","'useEffect' is defined but never used.","'DialogContentText' is defined but never used.","'description' is assigned a value but never used.","'inputDescription' is assigned a value but never used.","'classes' is assigned a value but never used.","'green' is defined but never used.","'password' is assigned a value but never used.","'inputPassWord' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]